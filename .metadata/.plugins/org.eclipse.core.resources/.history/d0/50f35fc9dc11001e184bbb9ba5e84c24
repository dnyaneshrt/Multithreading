
//by using first way.. by extending Thread class

/*class Hi extends Thread{
	
	public void run()
	{
		for(int i=1;i<=10;i++)
		{
		System.out.println("hiiiiiiiiiiiiii");	
		try { Thread.sleep(500); } catch (InterruptedException e) {e.printStackTrace();}
		}	
	}
}

class By extends Thread{

	public void run() {
		for(int i=1;i<=10;i++)
		{
		System.out.println("byyyyyyyyyyyyy");
		System.out.println("---------------------------------");
		try { Thread.sleep(500); } catch (InterruptedException e) {e.printStackTrace();}
		}
	}

}*/


class Hi implements Runnable{

	public void run()
	{
		for(int i=1;i<=10;i++)
		{
		System.out.println("hiiiiiiiiiiiiii");	
		try { Thread.sleep(500); } catch (InterruptedException e) {e.printStackTrace();}
		}	
	}
	
}

class By implements Runnable{

	public void run() {
		for(int i=1;i<=10;i++)
		{
		System.out.println("byyyyyyyyyyyyy");
		System.out.println("---------------------------------");
		try { Thread.sleep(500); } catch (InterruptedException e) {e.printStackTrace();}
		}
	}

}

public class ThreadTest1 {

	public static void main(String[] args) {
	
	
		
		Runnable r1=new Hi();
		Thread t1=new Thread(r1);
		t1.start();// start method will start thread by internally calling run()
		
		try { Thread.sleep(200); } catch (InterruptedException e) {e.printStackTrace();}
		
		Runnable r2=new By();
		Thread t2=new Thread(r2);
		t2.start();// start method will start thread by internally calling run()
	
	
	
		
	}

}
